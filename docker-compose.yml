version: "3.5"

services:
  postgresql:
    image: postgres:13.3
    env_file:
      - env.d/postgresql

  grafana:
    image: grafana/grafana:8.0.3
    ports:
      - 3000:3000
    user: "${DOCKER_USER:-1000}"
    volumes:
      - ./etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./etc/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./src/plugins:/var/lib/grafana/plugins/potsie
      - ./var/lib/grafana/dashboards:/var/lib/grafana/dashboards
    env_file:
      - env.d/grafana
    depends_on:
      - edx_mysql
      - elasticsearch
      - postgresql
    networks:
      - default
      - potsie

  app:
    build:
      context: .
    image: potsie:development
    user: "${DOCKER_USER:-1000}"
    volumes:
      - ./src/dashboards:/app/dashboards
      - ./src/plugins:/app/plugins
      - ./var/lib/grafana/dashboards:/var/lib/grafana/dashboards

  node:
    image: node:14
    user: "${DOCKER_USER:-1000}"
    # We must run node with a /home because yarn tries to write to ~/.yarnrc.
    # If the ID of our host user (with which we run the container) does not
    # exist in the container (e.g. 1000 exists but 1009 does not exist by
    # default), then yarn will try to write to "/.yarnrc" at the root of the
    # system and will fail with a permission error.
    environment:
      - HOME=/tmp
    working_dir: /src/plugins
    volumes:
      - ./src/plugins:/src/plugins

  jb:
    image: potsie:builder
    build:
      context: .
      target: builder
    volumes:
      - ./jsonnetfile.json:/go/jsonnetfile.json
      - ./jsonnetfile.lock.json:/go/jsonnetfile.lock.json
    entrypoint: jb
  
  patch_statements_date: 
    image: python:3.10
    user: "${DOCKER_USER:-1000}"
    volumes:
      - ./scripts:/scripts
    command: python scripts/patch_statements_date.py

  ralph:
    image: fundocker/ralph:latest
    user: "${DOCKER_USER:-1000}"
    entrypoint: ["ralph"]
    environment:
      - RALPH_ES_HOSTS=http://elasticsearch:9200
      - RALPH_ES_INDEX=statements
    networks:
      - default

  elasticsearch:
    image: elasticsearch:7.16.2
    mem_limit: 2g
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    networks:
      - default

  edx_mysql:
    image: mariadb:latest
    environment:
      MYSQL_DATABASE: edxapp
      MYSQL_USER: edxapp_user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_USER: edxapp_user
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3306:3306
    volumes:
      - ./fixtures/mysql/edxapp.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default

  curl:
    image: curlimages/curl:latest
    

  dockerize:
    image: jwilder/dockerize

networks:
  potsie:
    name: potsie
    driver: bridge
